Nette\Templates
****************

Šablony pomáhají oddělit HTML od aplikačního kódu. .[perex]

Pro úvod k šablonám v Nette a jeho šablonovacím systému vizte stránku [Šablony | sablony]. .[tip]

Třída `Nette\Templates\Template` zapouzdřuje soubor se šablonou.
Její základní použití:

/--php
$template = new Template;
// nastavíme cestu k souboru šablony
$template->setFile('template.phtml');
// nastavíme parametry
$template->hello = 'Hello World';
\--

Příklad šablony:

/--html
<p><?php echo $hello ?></p>
\--

A nakonec její vykreslení:
/--php
echo $template;
\--

.[tip]
Použití šablon samostatně bez MVP návrhu Nette Frameworku se dále věnuje [samostatná stránka | Jak použít šablony samostatně?].

Filtry
======

Šablonu je možné předzpracovat pomocí filtrů. Jak zaregistrovat filtr?

/--php
$this->template->registerFilter(new /*Nette\Templates\*/LatteFilter);
\---

Přečtěte si [popis standardních filtrů | Template Filters], které najdete přímo v distribuci.

Nejvhodnější řešení, jak filtr zaregistrovat ve všech presenterech, je vytvořit si vlastní presenter (např. abstract BasePresenter extends Presenter), který bude základem všech dalších presenterů v jedné aplikaci, a filtry zaregistruje ve své metodě `beforeRender()`

.[note]
Při použití filtrů šablon mimo Nette aplikaci je potřeba nastavit proměnnou "tempDir" na adresář, do kterého se budou ukládat zkompilované šablony (cache).



Helpery
==========

Do šablon je možné zaregistrovat helpery, tj. pojmenované funkce:

Příklad kódu, který zaregistruje helper "upper":
/--php
$template->registerHelper('upper', 'strtoupper');
\--
V případě použití Latte Filtru lze použít alternativní zápis pro práci s helpery. Více na [stránce helperů | Template Helpers].

Příklad šablony s použitím námi vytvořeného helperu:
/--html
...
<h1><?php echo $template->upper($heading) ?></h>
...
\--

Virtuální metoda upper se mapuje na funkci strtoupper, která je v jádru PHP. Jako helper je samozřejmě možné zaregistrovat jakýkoliv callback, nejen název funkce. Ve verzi PHP 5.3 a vyšší lze použít i anonymní funkce (tzv. Closure):
/--php
$template->registerHelper('shortify', function ($string) {
	return mb_substr($string, 0, 6);
});
\--

Přečtěte si [popis standardních helperů | Template Helpers] a popis [Latte Filteru | Template Filters], které najdete přímo v distribuci.


.[see]
Viz také:
- [Nette\Templates API reference | api:Nette\Templates]
