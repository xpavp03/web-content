Template Helpers
****************

Do šablon je možné zaregistrovat helpery, tj. pojmenované funkce:

Příklad kódu presenteru:

/--php
$this->template->registerHelper('upper', 'strtoupper');
\--

Příklad šablony:

/--code html
...
<h1><?php echo $template->upper($heading) ?></h>
...
\--

Virtuální metoda `upper` se mapuje na metodu `strtoupper`. Jako helper je samozřejmě možné zaregistrovat jakýkoliv callback, nejen název funkce.

Helpery podporuje i filtr curlyBrackets za použití této syntaxe:

/--code html
<h1>{$heading|upper}</h1>
\--

Je možno zřetězit více helperů (resp. modifikátorů):

/--code html
<h1>{$heading|lower|capitalize}</h1>
\--

Vykonají se v pořadí od levého k pravému.


Přehled standardních helperů.
===========

| helper | funkce
|-----------------------
| `escape` | ošetří HTML znaky (htmlSpecialChars)
| `translate` | překlad řetězce do jiného jazyku
| `lower` | převod na malá písmenka
| `upper` | převod na velká písmenka
| `capitalize` | převod na malá písmenka, první bude velké
| `strip` | odstraní bílé znaky (mezery)
| `nl2br` | zamění odřádkování za `<br />`
| `truncate` | zkrácení řetězce na požadovaný počet znaků
| `bytes` | lidsky přívětivé vyjádření velikost v bajtech
| `date` | zformátuje timestamp na "čitelné datum"((nejen pro unixové administrátory))


Většinu helperů implementuje statická třída `Nette\Template\TemplateHelpers` nebo [Nette\String].


truncate
--------

Ořízne řetězec na maximální délku a zachová celá slova, je-li to možné. Na konec oříznutého textu se přidá trojtečka, což lze změnit třetím nepovinným parametrem.

Příklad použití v šabloně (s filtrem CurlyBracketsFilter):

/--php
{? $title = 'Řekněte, jak se máte?'; }

{$title|truncate:5} <!-- Řekn… -->
{$title|truncate:20} <!-- Řekněte, jak se… -->
{$title|truncate:30} <!-- Řekněte, jak se máte? -->
\--

nebo bez filtru:

/--php
<h1><?php echo htmlSpecialChars($template->truncate($title, 30)) ?></h1>
\--

Vstupní řetězec musí být kódován v `UTF-8`. Pokud je v jiném kódování, převeďte jej funkcí [iconv | php:]. .[note]


bytes
-----

Převádí velikosti souborů v bajtech do lidsky čitelné podoby.

Příklad použití v šabloně:

/--php
{? $size = filesize("filename.txt"); ?}
{$size|bytes} <!-- 0 B, 10 B nebo 1.25 GB, ... -->
\--


lower, upper a capitalize
--------------------------

/--php
{? $s = "Dobrý den"; ?}

{$s|lower} <!-- dobrý den -->
{$s|upper} <!-- DOBRÝ DEN -->
{$s|capitalize} <!-- Dobrý Den -->
\--


.[see]
Viz také:
- [Nette\String API reference | api:Nette\String]
- [Nette\Templates\TemplateHelpers API reference | api:Nette\Templates\TemplateHelpers]
