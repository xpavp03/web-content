Slovník - Rychlý přehled
**************
Component, control, controller, snippet, presenter, modul a model. Jaký je mezi nimi rozdíl? Jaký význam mají v kontextu Nette Framework? .[perex]

Todo: .[info]
* (Přidat jmenné prostory)
* Dopsat, co chybí
* Sjednotit styl (velká/malá písmena)
* Zkontrolovat, zda Inza neřekl blbosti, opravit je...

<!--pojmy definovat vždy v čísle jednotném-->

A
----
.[#action]
.[#akce]
action:
	- (akce) - zastupuje požadavek uživatele. Je součástí presenteru (jeden presenter může mít více akcí).

C
----
.[#cesta]
cesta:
	- viz [route | #route].
.[#component]
component:
	- (komponenta) - znovupoužitelná součást aplikace. Třída, která je potomkem třídy Component.
.[#control]
control:
	- Vykreslitelná [komponenta | #component], třída, která je potomkem třídy [Control | Nette]\Application\Control.
.[#controller]
controller:
	- Písmenko **C** z MV**C** modelu; v Nette Framework je nahrazen [presenterem | #presenter].
.[#CurlyBrackets]
CurlyBrackets:
	- (složené závorky) speciální značky uvnitř [šablon | #template], zapisované pomocí složených závorek (odtud název), které umí zpracovat [filtry | #filter].

F
----
.[#filter]
filter:
	- (filtr) - pomůcka, která má na starosti předzpracování šablony (de facto je její preprocessor). Předzpracování podporuje syntax tzv. [CurlyBracktes | #CurlyBrackets]. (viz též: [Template Filters])

H
----
helper:
	- (pomocník) - pojmenovaná funkce, kterou lze zaregistrovat do instance [šablon | #template] a následně ji používat. Šablony implicitně mají několik [standardních helperů | Template helpers].

J
----
.[#jmenný prostor]
jmenný prostor:
	- viz [namespace | #namespace].

K
----
.[#komponenta]
komponenta:
	- viz [component | #component].

L
----
.[#loader]
loader:
	- instance některé z tříd [Nette\Loaders]. Využívá metody [__autoload | http://www.php.net/__autoload] a vhodné konvence názvu tříd a souborů, ve kterých jsou umístěny.

M
----
.[#model]
model:
	- Písmenko **M** z **M**VC modelu; aplikační (bussiness) logika aplikace, zprostředkuje přístup k práci s daty.
.[#modul]
modul:
	- Skupina Presenterů, Modelů a Pohledů, které spolu mají souvislost a nacházejí se v jednom stejném adresáři.

N
----
.[#namespace]
namespace:
	- (jmenný prostor) - prvek jazyka PHP (verze 5.3 a vyšší) a jiných programovacích/skriptovacích jazyků, umožňující zapouzdření a používání tříd (i jiných prvků jazyka), které jsou v různých knihovnách nazvány stejně, aniž by došlo ke kolizi jmen (případu, kdy by interpret jazyku nevěděl, prvek z jaké knihovny použít). ([dokumentace pro PHP | http://cz2.php.net/manual/en/language.namespaces.rationale.php])

P
----
.[#pohled]
pohled:
	- viz [view | #view].
.[#presenter]
presenter:
	- Ekvivalent [controlleru | #controller] z MV**C** modelu, přijímá požadavky od uživatele a realizuje je vykonáním cílové action a zobrazením view.

R
----
.[#route]
route:
	- (cesta, routa) - objekt třídy Route; analyzuje danou URL adresu a vytvoří z ní interní požadavek, popřípadě i naopak - viz [Nette\Application\Route].
.[#router]
router:
	- (směrovač) - Správce rout, zodpovědný za směrování rout na požadavky.

S
----
.[#složené závorky]
složené závorky:
	- viz [CurlyBrackets | #CurlyBrackets].
.[#směrovač]
směrovač:
	- viz [router | #router].
.[#snippet]
snippet:
	- (ústřižek) - označená oblast stránky, kterou lze překreslit pomocí AJAXu.
.[#šablona]
šablona:
	- viz [template | #template].

T
----
.[#template]
template:
	- ([šablona | nette-templates])
- buď HTML soubor s příponou `.phtml` s vloženými PHP, CurlyBrackets značkami
- objekt třídy [Template | Nette]\Templates.

U
----
.[#ústřižek]
ústřižek:
	- viz [snippet | #snippet].

V
----
.[#view]
view:
	- (pohled) - písmenko **V** z M**V**C modelu; převádí data reprezentovaná modelem do podoby vhodné k interaktivní prezentaci uživateli.
.[#vykreslitelna komponenta]
vykreslitelná komponenta:
	- viz [control | #control].
