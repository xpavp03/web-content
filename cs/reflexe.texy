Reflexe
*******

.[perex]
**Nette\Reflection** je soubor tříd rozšiřujících standardní [reflexní třídy | php:reflection] z PHP, především o [anotace | doc:cs:Reflexe/Anotace] a některé vlastnosti [doc:cs:Nette\Object].

Reflexe je jistý programový přístup k reverznímu inženýrství. Umožňuje nám zjistit takové informace jako jaké vlastnosti a metody daná třída má.

Typy reflexe
============
Rozlišujeme několik typů reflexe:

- Reflexe **třídy** *([ClassReflection | api:Nette\Reflection\ClassReflection])* - název, implementovaná rozhraní, [anotace | doc:cs:reflection/anotace], definované konstanty a metody...
- Reflexe **vlastnosti** *([PropertyReflection | api:Nette\Reflection\PropertyReflection])* - název, výchozí hodnota, [anotace | doc:cs:reflection/anotace], modifikátor přístupu, statičnost, ...
- Reflexe **metody** *([MethodReflection | api:Nette\Reflection\MethodReflection])* - název, parametry, [anotace | doc:cs:reflection/anotace], modifikátor přístupu, statičnost, abstraktnost, finálnost,...
- Reflexe **funkce** *([FunctionReflection | api:Nette\Reflection\FunctionReflection])* - název, parametry, jmenný prostor okolo, název souboru...
- Reflexe **parametru** *([MethodParameterReflection | api:Nette\Reflection\MethodParameterReflection])* - název, povinnost, výchozí hodnota, typ (pole / třída), pořadí parametru...
- Reflexe **PHP rozšíření** *([ExtensionReflection | api:Nette\Reflection\ExtensionReflection])* - název, verze, závislosti, definované třídy, funkce, konstanty a klíče v php.ini

.[tip]
Pro detailní přehled dostupných metod si prostuduje [API dokumentaci | http://api.nette.org/0.9/li_Nette-Reflection.html] a [PHP manuál | php:ReflectionClass].

Získání reflexe
===============
Reflexi lze získat buď přímo, použitím jejího konstruktoru...

/--php
// získání reflexe třídy Nette\Application\Presenter
$classReflection = new Nette\Reflection\ClassReflection('Nette\Application\Presenter');

// získání reflexe metody forward třídy Nette\Application\Presenter
$methodReflection = new Nette\Reflection\MethodReflection('Nette\Application\Presenter', 'forward');
\--

... nebo jako návratovou hodnotu z "nadřazené reflexe":

/--php
// získání reflexe metody forward třídy Nette\Application\Presenter
$methodReflection = $classReflection->getMethod('forward');
\--


Usnadnění práce s Reflexemi
===========================
Třídy dědící [doc:cs:Nette\Object] mají metodu [getReflection() | api:Nette\Object::getReflection()] pro usnadnění práce s reflexemi. Díky tomu můžeme s reflexemi pracovat takto jednoduše
/--php
class Foo extends Nette\Object
{
	/** @var string */
	public $bar;

	public function getBarType()
	{
		return $this->getReflection() //získáme objekt reflexe třídy Foo
			->getProperty('bar') //získáme objekt reflexe vlastnosti bar
			->getAnnotation('var'); //získáme hodnotu anotace var
	}
}
\--
