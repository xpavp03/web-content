Nette\Web\Session
*******************

U webových aplikací je často potřeba uchovávat některé informace, např. o přihlášení uživatele nebo obsahu nákupního košíku, mezi načtením jednotlivých stránek. K tomuto účelu existují session neboli relace. Každý uživatel, který vstoupí na stránku, obdrží jedinečný identifikátor Session ID a ten se předává v cookies. Ten pak slouží jako klíč k session datům. Narozdíl od cookies, které se uchovávají na straně prohlížeče, jsou data v session uchovávána na straně serveru.

V Nette ke správě session slouží třída `Nette\Web\Session` a manipulaci s daty zajišťuje `Nette\Web\SessionNamespace`. Pro oddělení vzájemně nesouvisejících session dat se tedy používají jmenné prostory, ve kterých se s nimi pracuje podobně jako s běžným polem v PHP.

Příklad - čítač přístupů
=============

Začněme příkladem počítadla, které ukazuje, kolikrát uživatel zobrazil stránku:

/--php
// získáme přístup do jmenného prostoru counter
$namespace = Environment::getSession('counter');

// pokud v něm existuje proměnná $count
if (isset($namespace->count)) {
    // zvětšíme její hodnotu o jedničku
    $namespace->count++;
} else {
    // jinak ji inicializujeme
    $namespace->count = 1;
}

echo 'Počet shlédnutí: ', $namespace->count;
\--

A teď se podíváme na celou věc pozorněji. Získání přístupu do jmenného prostoru `counter`:

/--php
$session = Environment::getSession();

$namespace = $session->getNamespace('counter');
\--

nebo stručněji

/--php
$namespace = Environment::getSession('counter');
\--

Přístup k session proměnným ve jmenném prostoru
======================================

/--php
$namespace->a = 'apple';
$namespace->p = 'pear';
$namespace->o = 'orange';
\--

Čtení proměnných.

/--php
echo $namespace->a;
\--

Pro získání všech dat ze session namespace je možné použít cyklus `foreach`.

/--php
foreach ($namespace as $key => $val) {
    echo "$key je $val<br>";
}
\--

Zrušení proměnné ze session namespace.

/--php
unset($namespace->a);
\--

Nastavení expirace
==============

Klíč `a` vyprší po 5 sekundách:

/--php
$namespace->setExpiration(5, 'a');
\--

Jmenný prostor "test" bude označen jako "vypršelý" při prvním požadavku po uplynutí 60 sekund.
/--php
$namespace->setExpiration(60);
\--

Zrušení expirace
---------------
Zrušení vypršení pro klíč a.
/--php
$namespace->removeExpiration("a");
\--

Zrušení vypršení celého jmenného prostoru. Toto ovšem neovlivní explicitně nastavenou expiraci u klíče a.
/--php
$namespace->removeExpiration();
\--

Zrušení celého session namespace
==========================
/--php
$namespace->remove();
\--

Nette\Web\Session
===============

Projití všech Session namespace
-------------------------------

/--php
foreach (Environment::getSession() as $name) {
    echo "<h2>Namespace $name</h2>";
    foreach (Environment::getSession($name) as $key => $val) {
        echo "<h3>$key</h3>";
        Debug::dump($val);
    }
}
\--

Kontrola existence Session namespace
-------------------------------------
/--php
$session = Environment::getSession();
$session->hasNamespace('test'); // TRUE
\--
